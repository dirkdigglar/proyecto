#include <iostream>
#include <stdlib.h>
#include <time.h>
#include <vector>
#include <fstream>
using namespace std;

struct juego{
    string nombre;
    vector<string> categoria;
    string descripcion;
    double precio;
    int valorar_gusta;
    int valorar_no_gusta;

};

struct perfil{
    string user;
    string contrasena;
    vector<juego> compras;
    vector<int> key;
    double saldo;
};

struct tienda{
    vector<juego> catalogo;
};


void posicionUsuario(perfil login, vector<perfil> guardarcuentas, int &indice);
void existecuentausuario(perfil& cuenta, vector<perfil> guardarcuentas, bool& verificar);
void menuUsuarionoExist(int& elegir);
void crearNuevoUsuario(perfil& nuevo, vector<perfil>& guardarcuentas, perfil login, bool verificar);
void MenuPrincipal(int elegir, string categoria, vector<perfil> guardarcuentas,
                    int indice, int indicejuego, tienda todosJuegos);
void mostrarCategorias(string& categoria, int& elegir);
void prefUsuario(perfil user);
void key(perfil& keyUnica);
void MenuModifCuenta(int elegir);
void CambiarUser(perfil& cuenta, perfil login);
void CambiarContra(vector<perfil> todosUsers, perfil login, int indice);
void MenuBorrarCuenta(int elegir);
void BorrarCuenta(vector<perfil> todosUsers, perfil login, int indice);
void ValorarJuego(perfil& cuenta, juego& juego, int indice, int elegir);
void JuegosComprados(perfil cuenta, int indice, int elegir);
void menuCuenta(int& elegir, string categoria, vector<perfil> guardarcuentas,
                 int indice, int indicejuego, tienda todosJuegos);
void anadirDinero(vector<perfil> &guardarcuentas, int indice);
void Mostrarfondos(vector<perfil> guardarcuentas, int indice);
void buscarJuegos(tienda todosJuegos, int indicejuego, int& elegir,
                  string categoria, vector<perfil> guardarcuentas, int indice);



void posicionUsuario(perfil login, vector<perfil> guardarcuentas, int& indice){ ////BUSCAR POSICION DEL USUARIO EN EL VECTOR
///////////////////////BUSCAR POSICION DE LA CUENTA;
    for(int i=0; i<guardarcuentas.size(); i++){
        if(guardarcuentas[i].user==login.user){
            indice=i;
        }
    }
}

void existecuentausuario(perfil& cuenta, vector<perfil> guardarcuentas, bool& verificar){
    cout<<"introduce el usuario: " <<endl;
    cin>>cuenta.user;
    cout<<"introduce la contrasena: " <<endl;
    cin>>cuenta.contrasena;
    for(int i=0; i<guardarcuentas.size(); i++){
        if(guardarcuentas[i].user==cuenta.user and guardarcuentas[i].contrasena==cuenta.contrasena){
            verificar=true;
        }
    }
    cout<<"---------------------------------------------------" <<endl;
}

void menuUsuarionoExist(int& elegir){
    cout<<"el usuario o la contrasena no existe." <<endl;
    cout<<"1. volver a probar." <<endl;
    cout<<"2. crear cuenta. ";
    cin>>elegir;
    cout<<endl <<"----------------------------------------------------" <<endl;
}

void crearNuevoUsuario(perfil& nuevo, vector<perfil>& guardarcuentas, perfil login, bool verificar){
    cout<<endl <<"Introduce la nueva identificacion, porfavor: " <<endl;
    cout<<"introduce un nuevo usuario: ";
    cin>>nuevo.user;
    cout<<"introduce una nueva contrasena: ";
    cin>>nuevo.contrasena;
    guardarcuentas.push_back(nuevo);
    guardarcuentas.push_back(nuevo);
    cout<<endl <<"----------------------------------------------------" <<endl;
}

void MenuPrincipal(int elegir, string categoria, vector<perfil> guardarcuentas, int indice, int indicejuego, tienda todosJuegos){//cuenta, categoria de juegos, buscar juego, preferencias usuario, salir.
    cout<<"1. Cuenta" <<endl;
    cout<<"2. Categorias preferidas" <<endl;
    cout<<"3. Buscar juegos en la tienda" <<endl;
    cout<<"4. juegos segun categoria" <<endl;
    cout<<"5. Salir" <<endl;
    cin>>elegir;
    cout<<"--------------------------------------------------";
    if(elegir==1) menuCuenta(elegir, categoria, guardarcuentas, indice, indicejuego, todosJuegos);
    //if(elegir==2) //menu categorias preferidas
    if(elegir==3) buscarJuegos(todosJuegos, indicejuego, elegir, categoria, guardarcuentas, indice);
    if(elegir==4) mostrarCategorias(categoria, elegir);
    if(elegir==5) ;

}

void menuCuenta(int& elegir, string categoria, vector<perfil> guardarcuentas, int indice, int indicejuego, tienda todosJuegos) { //Me falta acabarlo pero es simplemente hacer lo mismo llamando otra funciones, lo hare cuando despierte
	cout<<endl <<"1. Fondos disponibles "<<endl;
	cout<<"2. Anadir fondos "<<endl;
	cout<<"3. Juegos adquiridos "<<endl;
	cout<<"4. Eliminar cuenta "<<endl;
	cout<<"5. Modificar cuenta "<<endl;
	cout<<"6. Menu principal "<<endl;
	cin>> elegir;
	if(elegir==1) Mostrarfondos(guardarcuentas, indice);
    if(elegir==2) anadirDinero(guardarcuentas, indice);
    if(elegir==3);
    if(elegir==4) MenuBorrarCuenta(elegir);
    if(elegir==5) MenuModifCuenta(elegir);
    if(elegir==6) MenuPrincipal(elegir, categoria, guardarcuentas, indice, indicejuego, todosJuegos);
    cout<<"--------------------------------------------------";
}

void buscarJuegos(tienda todosJuegos, int indicejuego, int& elegir,
                  string categoria, vector<perfil> guardarcuentas, int indice){

    string busqueda;
    bool encontrado=false;
    cout<<endl <<"introduce el nombre del juego que quieres buscar: ";
    cin>>busqueda;

    while(encontrado==false){
        for(int i=0; i<todosJuegos.catalogo.size(); i++){
            if(busqueda==todosJuegos.catalogo[i].nombre){
                encontrado=true;
                indicejuego=i;
            }
        }
        if(encontrado==true){
            cout<<"Nombre: " <<todosJuegos.catalogo[indicejuego].nombre <<endl;
            cout<<"Descripcion: " <<todosJuegos.catalogo[indicejuego].descripcion <<endl;
            cout<<"Precio: " <<todosJuegos.catalogo[indicejuego].precio <<endl;
            cout<<"Categoria/as: ";
            for(int i=0; i<todosJuegos.catalogo[indicejuego].categoria.size(); i++){
                cout<<todosJuegos.catalogo[indicejuego].categoria[i] <<" ";
            }
            cout<<"Valoracion: " <<todosJuegos.catalogo[indicejuego].valorar_gusta <<" votos positivos";
            cout<<todosJuegos.catalogo[indicejuego].valorar_no_gusta <<" votos negativos";

            //QUE QUIERES HACER?

        }else{
            cout<<endl <<"No se ha encontrado ningun resultado: ";
            cout<<endl <<"1. Volver a buscar";
            cout<<endl <<"2. Salir al menu principal";
            cin>>elegir;
        }
        if(elegir==1) encontrado=false;
        if(elegir==2) {
            encontrado=true;
            MenuPrincipal(elegir, categoria, guardarcuentas, indice, indicejuego, todosJuegos);
        }
    }
}

void Mostrarfondos(vector<perfil> guardarcuentas, int indice){
    ////SI NO SE HAN AÑADIDO FONDOS SALE ALGO RARO.
    cout<<"Actualmente";
    if(guardarcuentas[indice].saldo>0) cout<<" hay " <<guardarcuentas[indice].saldo;
    else{cout<<" no hay";}
    cout<<" euros en esta cuenta.";

}

//void MostrarJuegosAdquiridos(vector<juego> guardarcuentas, int indice){
//    for(int i=0; i<guardarcuentas[indice.compras.size(); i++){
//        cout<<compras[i] <<endl;
//    }
//}

void anadirDinero(vector<perfil> &guardarcuentas, int indice) {
	int ingreso;
	cout<<"Cuanto dinero quieres ingresar? "<<endl;
	cin>>ingreso;
	guardarcuentas[indice].saldo=guardarcuentas[indice].saldo+ingreso;
	cout<<endl <<"Ahora dispones de " <<guardarcuentas[indice].saldo <<" euros" <<endl;
}

void mostrarCategorias(string& categoria, int& elegir){
    //////////////////////////////////////SOLO LEE LA LISTA DE CATEGORIAS Y LAS MUESTRA POR PANTALLA.
    int x=1;
    ifstream categoriabazar("categorias.txt");
    cout<<endl <<"Categorias: "<<endl <<endl;
    while(categoriabazar>>categoria){
       cout<<x <<". " <<categoria <<endl;
       x++;
    }
    cin>>elegir;
    cout<<"------------------------------------------------";
}

void prefUsuario(perfil user){
    vector<string> pref;
    vector<int> repeticiones;
    /////////////////////////////////////////CONTAR LAS VECES QUE SE REPITE UNA CATEGOÍA
    for(int i=0; i<user.compras.size(); i++){
        for(int k=0; k<i; i++){
            if(user.compras[i].categoria==user.compras[k].categoria){
                repeticiones[i]++;
            }
        }
    }
    ////////////////////////////////////////ORDENAR DE MÁS REPETIDOS A MENOS
    int pivote;
    for(int i=0; i<user.compras.size()-1; i++){
        for(int k=0; k<(user.compras.size()-1-i); k++){
            if(repeticiones[i]>repeticiones[i+1]){
                pivote=repeticiones[i];
                repeticiones[i]=repeticiones[i+1];
                repeticiones[i+1]=pivote;
            }
        }
    }
    ////////////////////////////////////////MOSTRAR LAS CATEGORÍAS POR ORDEN
    cout<<"Categorias preferidas del usuario" <<endl;
    for(int i=0; i<user.compras.size(); i++){
        cout<<i+1 <<". " <<repeticiones[i] <<endl;
    }
    cout<<"-------------------------------------------";
}
//
//void key(perfil& keyUnica){
//    ///////////////////////////////GENERAR KEY Y GUARDARLA
//    int x=0;
//    bool repetido=false;
//    int indicekey;
//    while(x==0 or repetido==true){
//        keyUnica.key.push_back(1000000000+rand()%(9999999999-1000000000));
//        indicekey=keyUnica.size();
//        ////////////////////////////BUSCAR SI EXISTE LA KEY.
//        for(int i=1; i<keyUnica.size()-1; i++){
//            if(keyUnica[indicekey].key==keyUnica[i].key){
//                repetido=true;
//                x++;
//            }
//        }
//    }
//}

void MenuModifCuenta(int elegir){
    cout<<endl;
    cout<<"1. Cambiar nombre de Usuario" <<endl;
    cout<<"2. Cambiar contrasena" <<endl;
    cout<<"3. Eliminar cuenta" <<endl;
    cout<<"4. Menu Principal" <<endl;
    cin>>elegir;
    cout<<"----------------------------------------------";

}

void CambiarUser(vector<perfil> todosUsers, perfil login, int indice){
   ///////////////////////BUSCAR POSICION DE LA CUENTA;
    string usuario;
    cout<<"Introduce el nuevo nombre de usuario: ";
    cin>>usuario;
    todosUsers[indice].user=usuario;
    cout<<"El nombre de usuario se ha modificado" <<endl;
    cout<<"--------------------------------------------";
}

void CambiarContra(vector<perfil> todosUsers, perfil login, int indice){
    ///////////////////////BUSCAR POSICION DE LA CUENTA;
    int password;
    string contrasena;
    string contrasena2;
    bool coincide=false;

    while(coincide==false){
        cout<<endl <<"Introduce la nueva contrasena: ";
        cin>>contrasena;
        cout<<endl <<"Vuelve a introducir la nueva contrasena: ";
        cin>>contrasena2;
        if(contrasena==contrasena2){
            todosUsers[indice].contrasena=contrasena;
            coincide=true;
        }else{
            cout<<"Las contrasenas introducidas no coinciden, prueba otra vez. ";
        }
    }
    cout<<"El nombre de usuario se ha modificado" <<endl;
    cout<<"-----------------------------------------------";

}

void MenuBorrarCuenta(int elegir){
    cout<<endl <<"¿Estas seguro/a que quieres eliminar la cuenta? Si lo haces se eliminarán todos los datos y se cerrará el programa.";
    cout<<endl <<"1. SI y salir del programa ";
    cout<<endl <<"2. NO, llevame al menu principal ";
    cin>> elegir;
    cout<<"---------------------------------------------";
}

//void BorrarCuenta(vector<perfil> todosUsers, perfil login, int indice){
//    ///////////////////////BORRAR USUARIO;
//    todosUsers.erase(indice);
//    cout<<endl <<"La cuenta de Usuario se ha eliminado.";
//    cout<<endl <<"Adios.";
//    return 0;
//
//}

//void ValorarJuego(perfil& cuenta, juego& juego, int indice, int elegir){
//    bool segundoclick=false;
//    if(elegir==1){
//        juego[indice].valorar_gusta+=1;
//        segundoclick=true;
//    }
//    if(elegir==2){
//        juego[indice].valorar_no_gusta+=1;
//        segundoclick=true;
//    }
//    if(elegir==1 and segundoclick==true){
//        juego[indice].valorar_gusta-=1;
//    }
//    if(elegir==2 and segundoclick==true){
//        juego[indice].valorar_no_gusta-=1;
//    }
//}

//void JuegosComprados(perfil cuenta, int indice, int elegir){
//    cout<<endl <<"LISTA DE JUEGOS COMPRADOS " <<endl;
//    for(int i=0; i<perfil.compras.size(); i++){
//        cout<<i <<". " <<perfil[indice].compras[i] <<endl;
//    }
//    cout<<"-----------------------------------------------";
//    cout<<endl;
//    cout<<"1. Ver informacion juego" <<endl;
//    cout<<"2. Ver key del juego";
//    /////////////ME CAGO EN LA PUTA COMO PUEDO HACER ESTO FÁCIL?????????????
//}


int main(){
    perfil login;
    tienda game;
    vector<perfil> guardarcuentas;
    bool verificar=false;
    int elegir;
    string categoria;
    int indice;
    int indicejuego;
//CREAR CUENTA ADMIN.
    perfil admin;
    admin.user= "admin";
    admin.contrasena= "admin";
    guardarcuentas.push_back(admin);
//////////////////////
    existecuentausuario(login, guardarcuentas, verificar);
    while(verificar==false){
        menuUsuarionoExist(elegir);
        if(elegir==1)existecuentausuario(login, guardarcuentas, verificar);
        if(elegir==2){
            crearNuevoUsuario(login, guardarcuentas, login, verificar);
            existecuentausuario(login, guardarcuentas, verificar);
        }
    }
    cout<<"Bienvenido, " <<login.user <<". " <<endl;
    posicionUsuario(login, guardarcuentas, indice);
    MenuPrincipal(elegir, categoria, guardarcuentas, indice, indicejuego, game);
    srand(time(NULL));
}



